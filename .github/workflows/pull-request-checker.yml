name: PR Checker

on:
  pull_request:
    branches:
      - docs-staging
      - master
    types: [opened, reopened, labeled]

jobs:

  initial-comment:
    name: PR Instructions
    runs-on: ubuntu-latest
    # if: github.event.action == 'opened'

    steps:
      - name: Add initial comment w/ instructions
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Initial comment
          message: |
            Thank you for creating this PR! To get your content published, please follow these instructions:
            <br/>**If you are *not* a Doc Squad writer**
            1. Add the label `needs review by doc`.
            2. Identify your content topic with a label. (Examples: `area: apiml`, `area: cli`, `area: install and config`, etc.)
            3. Specify the Zowe release for your content. Use either label `current release` or `next release`.
            4. Notify the Doc Squad about this PR: If you don't know who should review your content, message the [#zowe-doc](https://openmainframeproject.slack.com/archives/CC961JYMQ) Slack channel. If you know which Doc Squad writer should approve your content, add that person as a reviewer.
            5. If you are unable to take any of these steps, notify the Doc Squad in the [#zowe-doc](https://openmainframeproject.slack.com/archives/CC961JYMQ) Slack channel for help.
            <br/>
            <br/>**If you *are* a Doc Squad writer**
            1. Add the label `needs review by sme`.
            2. Identify your content topic with a label. (Examples: `area: apiml`, `area: cli`, `area: install and config`, etc.)
            3. Specify the Zowe release for your content: Use either label `current release` or `next release`.
            4. Notify the SME to review this PR.
            5. Fix broken links found in your content areas and link any issues related to this PR.
      - name: Checkout file
        uses: Bhacaz/checkout-files@v2
        with:
          files: ".github/pull_request_template.md"  
      - name: Description checker
        uses: jadrol/pr-description-checker-action@v1.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          template-path: "./.github/pull_request_template.md"  
          comment: true
          comment-empty-description: "The PR description is empty, please add a valid description."
          comment-template-not-filled: "It looks like your description is too short. The PR description must be at least 85 characters."

  review-labels:
    name: Check for missing review label
    runs-on: ubuntu-latest

    steps:
      - name: Review Label Check
        id: prefix_label_check
        uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          prefix_mode: true
          any_of: "needs review by"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Missing Review Label Comment PR
        if: failure()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Review label missing
          message: |
            The **review** label is missing. Add a `needs review by` label so we can determine who needs to approve this PR.

          
  release-labels:
    name: Check for missing release label
    runs-on: ubuntu-latest

    steps:
      - id: prefix_label_check
        uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          prefix_mode: true
          one_of: "release:"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Missing Release Label Comment PR
        if: failure()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Release label missing
          message: |
            The **release** label is missing. Add a `current release` or `next release` label so your content is published with the correct Zowe release.

  area-labels:
    name: Check for missing area label
    runs-on: ubuntu-latest

    steps:
      - id: prefix_label_check
        uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          prefix_mode: true
          any_of: "area:"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Missing Area Label Comment PR
        if: failure()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Area label missing
          message: |
            The **subject area** label is missing. Add an `area:` label so we know what your content is about.
    